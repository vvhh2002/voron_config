#####################################################################
# 	Macros
#####################################################################
[gcode_macro MOTION_TEST]
gcode:
    G1 X10 Y20 F5000.0
    G1 X50 Y20 F5000.0
    G1 X100 Y200.0 F6000
    G1 X300 Y300 F6000
    G1 X100 Y200.0 F6000
    G1 X300 Y300 F6000
    G1 X100 Y200.0 F6000
    G1 X300 Y300 F6000
    G1 X100 Y200.0 F6000
    G1 X300 Y300 F6000
    G1 X50 Y20 F6000.0
    G1 X175 Y175 Z200 F6000

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    QUAD_GANTRY_LEVEL
    G28
    G0 X175 Y175 Z20 F6000
   
[gcode_macro PRINT_TEST]
gcode:
    G92 E0
    G1 X10 Y20 Z0 F5000.0
    G1 X10 Y200.0 Z0 F750.0 E18
    G92 E0
    G1 Z120 F3000



[gcode_macro PRINT_TEST_0]
gcode:
    G92 E0
    G1 X175 Y20 Z0 F5000.0
    G1 X175 Y200.0 Z0 F750.0 E18
    G92 E0
    G1 Z120 F3000


[gcode_macro PRINT_TEST_1]
gcode:
    G92 E0
    G1 X175 Y20 Z0.1 F5000.0
    G1 X175 Y200.0 Z0 F750.0 E18
    G92 E0
    G1 Z120 F3000

[gcode_macro COLD_BOOT]
gcode:
    G28         ;home
    g0 x175 y175 z180 F3600
    Quad_Gantry_Level
    M140 S100   ; bed temperature 100
    M109 S230   ; extruder temperature 230
    M104 S0     ; extruder temperature poweroff
    G28         ;home
    clean_nozzle 
    clean_nozzle 
    G28         ;home
    g0 x175 y175 z180 F3600
    M109 S150   ; extruder temperature 150
    clean_nozzle 
    M104 S0     ; extruder temperature poweroff
    M190 S110   ; wait bed temperature 110
    M190 S100   ; wait bed temperature 100
    G28
    Quad_Gantry_Level
    g0 x175 y175 z180 F3600
    G28
    Quad_Gantry_Level
    BED_MESH_CALIBRATE



# Name of the macro is clean_nozzle_only.

[gcode_macro clean_nozzle_only]

# If you are putting your purge bucket at the rear left of the bed as per default installation, enable True on your location_bucket_rear 
# variable. If you want to put your purge bucket elsewhere (perhaps the front), then set it to False. See diagrams and description 
# further below on how to set your XY position.
variable_location_bucket_rear:      True

# If you want the purging routine in your bucket enabled, set to True (and vice versa).
variable_enable_purge:              True

# These parameters define your filament purging. Update as necessary. If you decided to not enable purge, you can ignore this section.
variable_purge_len:            10	         ; Amount of filament, in mm, to purge.
variable_purge_spd:           150	         ; Speed, in mm/s, of the purge.
variable_purge_temp_min:      220	         ; Minimum nozzle temperature to permit a purge. Otherwise, purge will not occur.

# Adjust this so that your nozzle scrubs within the brush. Currently defaulted to be a lot higher for safety. Be careful not to go too low!
variable_brush_top:            2

# These parameters define your scrubbing, travel speeds, safe z clearance and how many times you want to wipe. Update as necessary.
variable_clearance_z:           10	         ; When traveling, but not cleaning, the clearance along the z-axis between nozzle and brush.
variable_wipe_qty:              5	         ; Number of complete (A complete wipe: start left, go right, go left) wipes.
variable_prep_spd_xy:        3000	         ; Travel (not cleaning) speed along x and y-axis in mm/min.
variable_prep_spd_z:         1500	         ; Travel (not cleaning) speed along z axis in mm/min.
variable_wipe_spd_xy:        5000	         ; Nozzle wipe speed in mm/min.


# These parameters define the size of the brush. Update as necessary. A visual reference is provided below. Note that orientation of 
# parameters remain the same whether bucket is at rear or front.
# 
#                  ←   brush_width   →                            
#                   _________________                                                          ↑
#                  |                 |  ↑                     If you chose location_bucket_rear = True, Y position is acquired
#  brush_start (x) |                 | brush_depth            from your stepper_y position_max. Adjust your brush physically in
#                  |_________________|  ↓                               Y so that the nozzle scrubs within the brush.       
#                          (y)                                                                 ↓
#                      brush_front
# __________________________________________________________
#                     PRINTER FRONT
# 
# 
## For V1.8, you may need to measure where your brush is on the x axis and input manually into any of the variable_brush_start uncommented.
## For V2.4 250mm build, uncomment this below: 
#variable_brush_start:     25	    

## For V2.4 300mm build, uncomment this below:
#variable_brush_start:     50

## For V2.4 350mm build, uncomment this below:
variable_brush_start:     75               	      

## These are only used if location_bucket_rear is False. You specify a custom location in y axis for your brush - see diagram above. ##
variable_brush_front:       0          
variable_brush_depth:       0          


# These parameters define the size of your purge bucket. Update as necessary. If you decided to not enable purge, you can ignore 
# this section. A visual reference is provided below. Note that orientation of parameters remain the same whether bucket is at rear 
# or front.
# 
#                                     bucket_gap
#                                      ← ---- →
#                     __________________________________________
#                    |                 |      |                 |      
#                    |                 |      |                 |
#  bucket_start (x)  |                 |______|                 |
#                    |                 |      |                 |
#                    |                 |      |                 |
#                    |_________________|. . . |_________________|
#                     ← ------------- →        ← ------------- →
#                     bucket_left_width        bucket_right_width
#  _______________________________________________________________________________________
#                                    PRINTER FRONT
# 
## For V2.4 250mm build, uncomment below 
#variable_bucket_left_width:    42

## For V2.4 300mm build, uncomment below
#variable_bucket_left_width:    67

## For V2.4 350mm build, uncomment below
variable_bucket_left_width:    92                   

# For V1.8, you may need to measure where your bucket start is and input into bucket_start. Otherwise, a value of 0 is for a default
# installation of purge bucket at rear left.
variable_bucket_start: 0


###############################################################################################################################################
###############################################################################################################################################

### From here on, unless you know what you're doing, it's recommended not to change anything.

###############################################################################################################################################
###############################################################################################################################################

# Placeholder. The variable will contain at random a number representing the left or right bucket.
variable_bucket_pos:            1	        

# This value is defaulted from brush location in CAD (rear left). Refer to diagram for visual reference.
variable_brush_width:          52	

# These values are defaulted from bucket geometry in CAD (rear left location). Refer to diagram for visual reference.
variable_bucket_right_width:   40            
variable_bucket_gap:           22	

gcode:
   # First, check if the axes are homed.
   {% if "xyz" in printer.toolhead.homed_axes %}

      ## Save the gcode state in this macro instance.
      SAVE_GCODE_STATE NAME=clean_nozzle_only

      ## Set to absolute positioning.
      G90

      ## Grab max position of Y-axis from config to use in setting a fixed y position for location_bucket_rear = True.
      {% set Ry = printer.configfile.config["stepper_y"]["position_max"]|float %}

      ## Check if user enabled purge option or not.
      {% if enable_purge %}

         ### Randomly select left or right bin for purge. 
         SET_GCODE_VARIABLE MACRO=clean_nozzle_only VARIABLE=bucket_pos VALUE={(range(0, 1) | random)}

         ### Raise Z for travel.
         G1 Z{brush_top + clearance_z} F{prep_spd_z}

         ### Check if user chose to use rear location.
         {% if location_bucket_rear %}
            G1 Y{Ry} F{prep_spd_xy}
         {% else %}
            G1 Y{brush_front + (brush_depth / 2)} F{prep_spd_xy}
         {% endif %}

         ### Position for purge. Randomly selects middle of left or right bucket. It references from the middle of the left bucket.
         G1 X{bucket_start + (bucket_left_width / 2) + (bucket_pos * bucket_gap) + (bucket_pos * (bucket_right_width / 2))}

      {% endif %}
   
      ## Position for wipe.
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      G1 X{brush_start} F{prep_spd_xy}

      ## Check if user chose to use rear location.
      {% if location_bucket_rear %}
         G1 Y{Ry}
      {% else %}
         G1 Y{brush_front + (brush_depth / 2)}
      {% endif %}

      ## Move nozzle down into brush.
      G1 Z{brush_top} F{prep_spd_z}
   
      ## Perform wipe.
      {% for wipes in range(1, (wipe_qty + 1)) %}
         G1 X{brush_start + brush_width} F{wipe_spd_xy}
         G1 X{brush_start} F{wipe_spd_xy}
      {% endfor %}
   
      ## Clear from area.
      M117 Cleaned!
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      G1 X{bucket_left_width / 4} F{prep_spd_xy} 

      ## Restore the gcode state to how it was before the macro.
      RESTORE_GCODE_STATE NAME=clean_nozzle_only

   {% else %}

      ## raise error will stop any macros that clean_nozzle is referenced in from proceeding for safety.
      { action_raise_error("Please home your axes!") }
      M117 Please home first!

   {% endif %}


# Name of the macro is clean_nozzle.

[gcode_macro clean_nozzle]

# If you are putting your purge bucket at the rear left of the bed as per default installation, enable True on your location_bucket_rear 
# variable. If you want to put your purge bucket elsewhere (perhaps the front), then set it to False. See diagrams and description 
# further below on how to set your XY position.
variable_location_bucket_rear:      True

# If you want the purging routine in your bucket enabled, set to True (and vice versa).
variable_enable_purge:              True

# These parameters define your filament purging. Update as necessary. If you decided to not enable purge, you can ignore this section.
variable_purge_len:            10	         ; Amount of filament, in mm, to purge.
variable_purge_spd:           150	         ; Speed, in mm/s, of the purge.
variable_purge_temp_min:      220	         ; Minimum nozzle temperature to permit a purge. Otherwise, purge will not occur.

# Adjust this so that your nozzle scrubs within the brush. Currently defaulted to be a lot higher for safety. Be careful not to go too low!
variable_brush_top:            2

# These parameters define your scrubbing, travel speeds, safe z clearance and how many times you want to wipe. Update as necessary.
variable_clearance_z:           10	         ; When traveling, but not cleaning, the clearance along the z-axis between nozzle and brush.
variable_wipe_qty:              5	         ; Number of complete (A complete wipe: start left, go right, go left) wipes.
variable_prep_spd_xy:        3000	         ; Travel (not cleaning) speed along x and y-axis in mm/min.
variable_prep_spd_z:         1500	         ; Travel (not cleaning) speed along z axis in mm/min.
variable_wipe_spd_xy:        5000	         ; Nozzle wipe speed in mm/min.


# These parameters define the size of the brush. Update as necessary. A visual reference is provided below. Note that orientation of 
# parameters remain the same whether bucket is at rear or front.
# 
#                  ←   brush_width   →                            
#                   _________________                                                          ↑
#                  |                 |  ↑                     If you chose location_bucket_rear = True, Y position is acquired
#  brush_start (x) |                 | brush_depth            from your stepper_y position_max. Adjust your brush physically in
#                  |_________________|  ↓                               Y so that the nozzle scrubs within the brush.       
#                          (y)                                                                 ↓
#                      brush_front
# __________________________________________________________
#                     PRINTER FRONT
# 
# 
## For V1.8, you may need to measure where your brush is on the x axis and input manually into any of the variable_brush_start uncommented.
## For V2.4 250mm build, uncomment this below: 
#variable_brush_start:     25	    

## For V2.4 300mm build, uncomment this below:
#variable_brush_start:     50

## For V2.4 350mm build, uncomment this below:
variable_brush_start:     75               	      

## These are only used if location_bucket_rear is False. You specify a custom location in y axis for your brush - see diagram above. ##
variable_brush_front:       0          
variable_brush_depth:       0          


# These parameters define the size of your purge bucket. Update as necessary. If you decided to not enable purge, you can ignore 
# this section. A visual reference is provided below. Note that orientation of parameters remain the same whether bucket is at rear 
# or front.
# 
#                                     bucket_gap
#                                      ← ---- →
#                     __________________________________________
#                    |                 |      |                 |      
#                    |                 |      |                 |
#  bucket_start (x)  |                 |______|                 |
#                    |                 |      |                 |
#                    |                 |      |                 |
#                    |_________________|. . . |_________________|
#                     ← ------------- →        ← ------------- →
#                     bucket_left_width        bucket_right_width
#  _______________________________________________________________________________________
#                                    PRINTER FRONT
# 
## For V2.4 250mm build, uncomment below 
#variable_bucket_left_width:    42

## For V2.4 300mm build, uncomment below
#variable_bucket_left_width:    67

## For V2.4 350mm build, uncomment below
variable_bucket_left_width:    92                   

# For V1.8, you may need to measure where your bucket start is and input into bucket_start. Otherwise, a value of 0 is for a default
# installation of purge bucket at rear left.
variable_bucket_start: 0


###############################################################################################################################################
###############################################################################################################################################

### From here on, unless you know what you're doing, it's recommended not to change anything.

###############################################################################################################################################
###############################################################################################################################################

# Placeholder. The variable will contain at random a number representing the left or right bucket.
variable_bucket_pos:            1	        

# This value is defaulted from brush location in CAD (rear left). Refer to diagram for visual reference.
variable_brush_width:          52	

# These values are defaulted from bucket geometry in CAD (rear left location). Refer to diagram for visual reference.
variable_bucket_right_width:   40            
variable_bucket_gap:           22	

gcode:
   # First, check if the axes are homed.
   {% if "xyz" in printer.toolhead.homed_axes %}

      ## Save the gcode state in this macro instance.
      SAVE_GCODE_STATE NAME=clean_nozzle

      ## Set to absolute positioning.
      G90

      ## Grab max position of Y-axis from config to use in setting a fixed y position for location_bucket_rear = True.
      {% set Ry = printer.configfile.config["stepper_y"]["position_max"]|float %}

      ## Check if user enabled purge option or not.
      {% if enable_purge %}

         ### Randomly select left or right bin for purge. 
         SET_GCODE_VARIABLE MACRO=clean_nozzle VARIABLE=bucket_pos VALUE={(range(0, 1) | random)}

         ### Raise Z for travel.
         G1 Z{brush_top + clearance_z} F{prep_spd_z}

         ### Check if user chose to use rear location.
         {% if location_bucket_rear %}
            G1 Y{Ry} F{prep_spd_xy}
         {% else %}
            G1 Y{brush_front + (brush_depth / 2)} F{prep_spd_xy}
         {% endif %}

         ### Position for purge. Randomly selects middle of left or right bucket. It references from the middle of the left bucket.
         G1 X{bucket_start + (bucket_left_width / 2) + (bucket_pos * bucket_gap) + (bucket_pos * (bucket_right_width / 2))}

         ### Perform purge if the temp is up to min temp. If not, it will skip and continue executing rest of macro.
         {% if printer.extruder.temperature >= purge_temp_min %}
            M83      ; relative mode
            G1 E{purge_len} F{purge_spd}
            G92 E0   ; reset extruder
         {% endif %}

      {% endif %}
   
      ## Position for wipe.
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      G1 X{brush_start} F{prep_spd_xy}

      ## Check if user chose to use rear location.
      {% if location_bucket_rear %}
         G1 Y{Ry}
      {% else %}
         G1 Y{brush_front + (brush_depth / 2)}
      {% endif %}

      ## Move nozzle down into brush.
      G1 Z{brush_top} F{prep_spd_z}
   
      ## Perform wipe.
      {% for wipes in range(1, (wipe_qty + 1)) %}
         G1 X{brush_start + brush_width} F{wipe_spd_xy}
         G1 X{brush_start} F{wipe_spd_xy}
      {% endfor %}
   
      ## Clear from area.
      M117 Cleaned!
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      G1 X{bucket_left_width / 4} F{prep_spd_xy} 

      ## Restore the gcode state to how it was before the macro.
      RESTORE_GCODE_STATE NAME=clean_nozzle

   {% else %}

      ## raise error will stop any macros that clean_nozzle is referenced in from proceeding for safety.
      { action_raise_error("Please home your axes!") }
      M117 Please home first!

   {% endif %}


[gcode_macro ALL_LIGHT_ON]
gcode: 
    SET_PIN PIN=caselight VALUE=10
    SET_PIN PIN=caselight2 VALUE=10

[gcode_macro ALL_LIGHT_OFF]
gcode: 
    SET_PIN PIN=caselight VALUE=0
    SET_PIN PIN=caselight2 VALUE=0

[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1

[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X10 Y340 F3600             ; park nozzle at rear
    BED_MESH_CLEAR
    


[gcode_macro PRINT_BED_MESH_CALIBRATE]
; gcode parameters
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
; the clearance between print area and probe area 
variable_mesh_area_offset : 5.0
; number of sample per probe point
variable_probe_samples : 5
; minimum probe count
variable_min_probe_count : 5
; scale up the probe count, should be 1.0 ~ < variable_max_probe_count/variable_min_probe_count
variable_probe_count_scale_factor : 1.0
gcode:
    {% if params.AREA_START and params.AREA_END %}
        {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
        {% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
        {% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
        {% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
        {% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}

        {% set area_min_x = params.AREA_START.split(",")[0]|float %}
	{% set area_min_y = params.AREA_START.split(",")[1]|float %}
	{% set area_max_x = params.AREA_END.split(",")[0]|float %}
	{% set area_max_y = params.AREA_END.split(",")[1]|float %}

        {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
        {% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|int %}
	
	{% set meshMaxPointX = meshPointX %}
	{% set meshMaxPointY = meshPointY %}


        {% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
            {% if area_min_x - mesh_area_offset >=  safe_min_x %}
                {% set area_min_x = area_min_x - mesh_area_offset %}
            {% else %}
                {% set area_min_x = safe_min_x %}
            {% endif %}

            {% if area_min_y - mesh_area_offset >=  safe_min_y %}
                {% set area_min_y = area_min_y - mesh_area_offset %}
            {% else %}
                {% set area_min_y = safe_min_y %}
            {% endif %}

            {% if area_max_x + mesh_area_offset <=  safe_max_x %}
                {% set area_max_x = area_max_x + mesh_area_offset %}
            {% else %}
                {% set area_max_x = safe_max_x %}
            {% endif %}

            {% if area_max_y + mesh_area_offset <=  safe_max_y %}
                {% set area_max_y = area_max_y + mesh_area_offset %}
            {% else %}
                {% set area_max_y = safe_max_y %}
            {% endif %}

            {% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x) * probe_count_scale_factor)|round(0)|int %}
            {% if meshPointX < min_probe_count %}
                {% set meshPointX = min_probe_count %}
            {% endif %}
	    {% if meshPointX > meshMaxPointX %}
                {% set meshPointX = meshMaxPointX %}
            {% endif %}

            {% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y) * probe_count_scale_factor )|round(0)|int %}
            {% if meshPointY < min_probe_count %}
                {% set meshPointY = min_probe_count %}
            {% endif %}
	    {% if meshPointY > meshMaxPointY %}
                {% set meshPointY = meshMaxPointY %}
            {% endif %}

            BED_MESH_CALIBRATE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int}
        {% else %}
            BED_MESH_CALIBRATE
        {% endif %}
    {% else %}
        BED_MESH_CALIBRATE
    {% endif %}



[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    G28                            ; home all axes
    Quad_Gantry_Level
    clean_nozzle_only
    clean_nozzle_only
    G28

    PRINT_BED_MESH_CALIBRATE 


    G1 Z20 F3000                   ; move nozzle away from bed
    G92 E0
    G1 X10 Y20 Z0.2 F5000.0
    G1 X10 Y100.0 Z0.2 F200 E12
    G1 Z5 E15 F200
    G92 E0
    # G1 Z20 F3000